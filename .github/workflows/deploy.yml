name: Build and Deploy to Azure Web Apps

on:
  push:
    branches:
      - production

env:
  REGISTRY_NAME: ${{ secrets.AZURE_REGISTRY_NAME }}
  REGISTRY_LOGIN_SERVER: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
  FRONTEND_APP: ${{ secrets.AZURE_WEBAPP_FRONTEND }}
  BACKEND_APP: ${{ secrets.AZURE_WEBAPP_BACKEND }}

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ðŸ”¹ Login to ACR
      - name: Login to Azure Container Registry
        run: az acr login --name $REGISTRY_NAME

      # ðŸ”¹ Build & push FRONTEND
      - name: Build and Push Frontend
        run: |
          docker build -t $REGISTRY_LOGIN_SERVER/frontend:${{ github.sha }} ./frontend
          docker push $REGISTRY_LOGIN_SERVER/frontend:${{ github.sha }}

      # ðŸ”¹ Build & push BACKEND
      - name: Build and Push Backend
        run: |
          docker build -t $REGISTRY_LOGIN_SERVER/backend:${{ github.sha }} ./backend
          docker push $REGISTRY_LOGIN_SERVER/backend:${{ github.sha }}

      # ðŸ”¹ Update Azure Web Apps
      - name: Update Web Apps to latest image
        run: |
          az webapp config container set \
            --name $FRONTEND_APP \
            --resource-group <YOUR_RESOURCE_GROUP> \
            --docker-custom-image-name $REGISTRY_LOGIN_SERVER/frontend:${{ github.sha }} \
            --docker-registry-server-url https://$REGISTRY_LOGIN_SERVER

          az webapp config container set \
            --name $BACKEND_APP \
            --resource-group <YOUR_RESOURCE_GROUP> \
            --docker-custom-image-name $REGISTRY_LOGIN_SERVER/backend:${{ github.sha }} \
            --docker-registry-server-url https://$REGISTRY_LOGIN_SERVER
